{
  "version": 3,
  "sources": ["../../nanostores/task/index.js", "../../nanostores/action/index.js", "../../nanostores/clean-stores/index.js", "../../nanostores/atom/index.js", "../../nanostores/lifecycle/index.js", "../../nanostores/computed/index.js", "../../nanostores/deep-map/path.js", "../../nanostores/deep-map/index.js", "../../nanostores/keep-mount/index.js", "../../nanostores/listen-keys/index.js", "../../nanostores/map/index.js"],
  "sourcesContent": ["let tasks = 0\nlet resolves = []\n\nexport function startTask() {\n  tasks += 1\n  return () => {\n    tasks -= 1\n    if (tasks === 0) {\n      let prevResolves = resolves\n      resolves = []\n      for (let i of prevResolves) i()\n    }\n  }\n}\n\nexport function task(cb) {\n  let endTask = startTask()\n  return cb().finally(endTask)\n}\n\nexport function allTasks() {\n  if (tasks === 0) {\n    return Promise.resolve()\n  } else {\n    return new Promise(resolve => {\n      resolves.push(resolve)\n    })\n  }\n}\n\nexport function cleanTasks() {\n  tasks = 0\n}\n", "import { startTask } from '../task/index.js'\n\nexport let lastAction = Symbol()\nexport let actionId = Symbol()\n\nlet uid = 0\n\nexport let doAction = (store, actionName, cb, args) => {\n  let id = ++uid\n  let tracker = { ...store }\n  tracker.set = (...setArgs) => {\n    store[lastAction] = actionName\n    store[actionId] = id\n    store.set(...setArgs)\n    delete store[lastAction]\n    delete store[actionId]\n  }\n  if (store.setKey) {\n    tracker.setKey = (...setArgs) => {\n      store[lastAction] = actionName\n      store[actionId] = id\n      store.setKey(...setArgs)\n      delete store[lastAction]\n      delete store[actionId]\n    }\n  }\n  let onError, onEnd\n  if (store.action) {\n    ;[onError, onEnd] = store.action(id, actionName, args)\n  }\n  let result = cb(tracker, ...args)\n  if (result instanceof Promise) {\n    let endTask = startTask()\n    return result\n      .catch(error => {\n        if (onError) onError(error)\n        throw error\n      })\n      .finally(() => {\n        endTask()\n        if (onEnd) onEnd()\n      })\n  }\n  if (onEnd) onEnd()\n  return result\n}\n\nexport let action =\n  (store, actionName, cb) =>\n  (...args) =>\n    doAction(store, actionName, cb, args)\n", "import { cleanTasks } from '../task/index.js'\n\nexport let clean = Symbol('clean')\n\nexport let cleanStores = (...stores) => {\n  if (process.env.NODE_ENV === 'production') {\n    throw new Error(\n      'cleanStores() can be used only during development or tests'\n    )\n  }\n  cleanTasks()\n  for (let store of stores) {\n    if (store) {\n      if (store.mocked) delete store.mocked\n      if (store[clean]) store[clean]()\n    }\n  }\n}\n", "import { clean } from '../clean-stores/index.js'\n\nlet listenerQueue = []\n\nexport let atom = (initialValue, level) => {\n  let listeners = []\n  let store = {\n    get() {\n      if (!store.lc) {\n        store.listen(() => {})()\n      }\n      return store.value\n    },\n    l: level || 0,\n    lc: 0,\n    listen(listener, listenerLevel) {\n      store.lc = listeners.push(listener, listenerLevel || store.l) / 2\n\n      return () => {\n        let index = listeners.indexOf(listener)\n        if (~index) {\n          listeners.splice(index, 2)\n          store.lc--\n          if (!store.lc) store.off()\n        }\n      }\n    },\n    notify(changedKey) {\n      let runListenerQueue = !listenerQueue.length\n      for (let i = 0; i < listeners.length; i += 2) {\n        listenerQueue.push(\n          listeners[i],\n          store.value,\n          changedKey,\n          listeners[i + 1]\n        )\n      }\n\n      if (runListenerQueue) {\n        for (let i = 0; i < listenerQueue.length; i += 4) {\n          let skip = false\n          for (let j = i + 7; j < listenerQueue.length; j += 4) {\n            if (listenerQueue[j] < listenerQueue[i + 3]) {\n              skip = true\n              break\n            }\n          }\n\n          if (skip) {\n            listenerQueue.push(\n              listenerQueue[i],\n              listenerQueue[i + 1],\n              listenerQueue[i + 2],\n              listenerQueue[i + 3]\n            )\n          } else {\n            listenerQueue[i](listenerQueue[i + 1], listenerQueue[i + 2])\n          }\n        }\n        listenerQueue.length = 0\n      }\n    },\n    off() {}, /* It will be called on last listener unsubscribing.\n                 We will redefine it in onMount and onStop. */\n    set(data) {\n      if (store.value !== data) {\n        store.value = data\n        store.notify()\n      }\n    },\n    subscribe(cb, listenerLevel) {\n      let unbind = store.listen(cb, listenerLevel)\n      cb(store.value)\n      return unbind\n    },\n    value: initialValue\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    store[clean] = () => {\n      listeners = []\n      store.lc = 0\n      store.off()\n    }\n  }\n\n  return store\n}\n", "import { clean } from '../clean-stores/index.js'\n\nconst START = 0\nconst STOP = 1\nconst SET = 2\nconst NOTIFY = 3\nconst MOUNT = 5\nconst UNMOUNT = 6\nconst ACTION = 7\nconst REVERT_MUTATION = 10\n\nexport let on = (object, listener, eventKey, mutateStore) => {\n  object.events = object.events || {}\n  if (!object.events[eventKey + REVERT_MUTATION]) {\n    object.events[eventKey + REVERT_MUTATION] = mutateStore(eventProps => {\n      // eslint-disable-next-line no-sequences\n      object.events[eventKey].reduceRight((event, l) => (l(event), event), {\n        shared: {},\n        ...eventProps\n      })\n    })\n  }\n  object.events[eventKey] = object.events[eventKey] || []\n  object.events[eventKey].push(listener)\n  return () => {\n    let currentListeners = object.events[eventKey]\n    let index = currentListeners.indexOf(listener)\n    currentListeners.splice(index, 1)\n    if (!currentListeners.length) {\n      delete object.events[eventKey]\n      object.events[eventKey + REVERT_MUTATION]()\n      delete object.events[eventKey + REVERT_MUTATION]\n    }\n  }\n}\n\nexport let onStart = (store, listener) =>\n  on(store, listener, START, runListeners => {\n    let originListen = store.listen\n    store.listen = arg => {\n      if (!store.lc && !store.starting) {\n        store.starting = true\n        runListeners()\n        delete store.starting\n      }\n      return originListen(arg)\n    }\n    return () => {\n      store.listen = originListen\n    }\n  })\n\nexport let onStop = (store, listener) =>\n  on(store, listener, STOP, runListeners => {\n    let originOff = store.off\n    store.off = () => {\n      runListeners()\n      originOff()\n    }\n    return () => {\n      store.off = originOff\n    }\n  })\n\nexport let onSet = (store, listener) =>\n  on(store, listener, SET, runListeners => {\n    let originSet = store.set\n    let originSetKey = store.setKey\n    if (store.setKey) {\n      store.setKey = (changed, changedValue) => {\n        let isAborted\n        let abort = () => {\n          isAborted = true\n        }\n\n        runListeners({\n          abort,\n          changed,\n          newValue: { ...store.value, [changed]: changedValue }\n        })\n        if (!isAborted) return originSetKey(changed, changedValue)\n      }\n    }\n    store.set = newValue => {\n      let isAborted\n      let abort = () => {\n        isAborted = true\n      }\n\n      runListeners({ abort, newValue })\n      if (!isAborted) return originSet(newValue)\n    }\n    return () => {\n      store.set = originSet\n      store.setKey = originSetKey\n    }\n  })\n\nexport let onNotify = (store, listener) =>\n  on(store, listener, NOTIFY, runListeners => {\n    let originNotify = store.notify\n    store.notify = changed => {\n      let isAborted\n      let abort = () => {\n        isAborted = true\n      }\n\n      runListeners({ abort, changed })\n      if (!isAborted) return originNotify(changed)\n    }\n    return () => {\n      store.notify = originNotify\n    }\n  })\n\nexport let STORE_UNMOUNT_DELAY = 1000\n\nexport let onMount = (store, initialize) => {\n  let listener = payload => {\n    let destroy = initialize(payload)\n    if (destroy) store.events[UNMOUNT].push(destroy)\n  }\n  return on(store, listener, MOUNT, runListeners => {\n    let originListen = store.listen\n    store.listen = (...args) => {\n      if (!store.lc && !store.active) {\n        store.active = true\n        runListeners()\n      }\n      return originListen(...args)\n    }\n\n    let originOff = store.off\n    store.events[UNMOUNT] = []\n    store.off = () => {\n      originOff()\n      setTimeout(() => {\n        if (store.active && !store.lc) {\n          store.active = false\n          for (let destroy of store.events[UNMOUNT]) destroy()\n          store.events[UNMOUNT] = []\n        }\n      }, STORE_UNMOUNT_DELAY)\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      let originClean = store[clean]\n      store[clean] = () => {\n        for (let destroy of store.events[UNMOUNT]) destroy()\n        store.events[UNMOUNT] = []\n        store.active = false\n        originClean()\n      }\n    }\n\n    return () => {\n      store.listen = originListen\n      store.off = originOff\n    }\n  })\n}\n\n\nexport let onAction = (store, listener) =>\n  on(store, listener, ACTION, runListeners => {\n    let errorListeners = {}\n    let endListeners = {}\n    let originAction = store.action\n    store.action = (id, actionName, args) => {\n      runListeners({\n        actionName,\n        args,\n        id,\n        onEnd: l => {\n          (endListeners[id] || (endListeners[id] = [])).push(l)\n        },\n        onError: l => {\n          (errorListeners[id] || (errorListeners[id] = [])).push(l)\n        }\n      })\n      return [\n        error => {\n          if (errorListeners[id]) {\n            for (let l of errorListeners[id]) l({ error })\n          }\n        },\n        () => {\n          if (endListeners[id]) {\n            for (let l of endListeners[id]) l()\n            delete errorListeners[id]\n            delete endListeners[id]\n          }\n        }\n      ]\n    }\n    return () => {\n      store.action = originAction\n    }\n  })\n", "import { atom } from '../atom/index.js'\nimport { onMount } from '../lifecycle/index.js'\n\nexport let computed = (stores, cb) => {\n  if (!Array.isArray(stores)) stores = [stores]\n\n  let diamondArgs\n  let run = () => {\n    let args = stores.map(store => store.get())\n    if (\n      diamondArgs === undefined ||\n      args.some((arg, i) => arg !== diamondArgs[i])\n    ) {\n      diamondArgs = args\n      derived.set(cb(...args))\n    }\n  }\n  let derived = atom(undefined, Math.max(...stores.map(s => s.l)) + 1)\n\n  onMount(derived, () => {\n    let unbinds = stores.map(store => store.listen(run, derived.l))\n    run()\n    return () => {\n      for (let unbind of unbinds) unbind()\n    }\n  })\n\n  return derived\n}\n", "export function getPath(obj, path) {\n  let allKeys = getAllKeysFromPath(path)\n  let res = obj\n  for (let key of allKeys) {\n    if (res === undefined) {\n      break\n    }\n    res = res[key]\n  }\n  return res\n}\n\nexport function setPath(obj, path, value) {\n  return setByKey(obj != null ? obj : {}, getAllKeysFromPath(path), value)\n}\n\nfunction setByKey(obj, splittedKeys, value) {\n  let key = splittedKeys[0]\n  ensureKey(obj, key, splittedKeys[1])\n  let copy = Array.isArray(obj) ? [...obj] : { ...obj }\n  if (splittedKeys.length === 1) {\n    if (value === undefined) {\n      if (Array.isArray(obj)) {\n        copy.splice(key, 1)\n      } else {\n        delete copy[key]\n      }\n    } else {\n      copy[key] = value\n    }\n    return copy\n  }\n  let newVal = setByKey(obj[key], splittedKeys.slice(1), value)\n  obj[key] = newVal\n  return obj\n}\n\nconst ARRAY_INDEX = /(.*)\\[(\\d+)\\]/\n\nfunction getAllKeysFromPath(path) {\n  return path.split('.').flatMap(key => {\n    if (ARRAY_INDEX.test(key)) {\n      let res = key.match(ARRAY_INDEX)\n      return res.slice(1)\n    }\n    return [key]\n  })\n}\n\nfunction ensureKey(obj, key, nextKey) {\n  if (key in obj) {\n    return\n  }\n  let nextKeyAsInt = parseInt(\n    nextKey !== null && nextKey !== undefined ? nextKey : ''\n  )\n  if (Number.isNaN(nextKeyAsInt)) {\n    obj[key] = {}\n  } else {\n    obj[key] = Array(nextKeyAsInt + 1).fill(undefined)\n  }\n}\n", "import { atom } from '../atom/index.js'\nimport { getPath, setPath } from './path.js'\n\nexport { getPath, setPath } from './path.js'\n\nexport function deepMap(initial = {}) {\n  let store = atom(initial)\n  store.setKey = (key, value) => {\n    if (getPath(store.value, key) !== value) {\n      store.value = setPath(store.value, key, value)\n      store.notify(key)\n    }\n  }\n  return store\n}\n", "export let keepMount = store => {\n  store.listen(() => {})\n}\n", "export function listenKeys(store, keys, listener) {\n  let keysSet = new Set([...keys, undefined])\n  return store.listen((value, changed) => {\n    if (keysSet.has(changed)) {\n      listener(value, changed)\n    }\n  })\n}\n", "import { atom } from '../atom/index.js'\n\nexport let map = (value = {}) => {\n  let store = atom(value)\n\n  store.setKey = function (key, newValue) {\n    if (typeof newValue === 'undefined') {\n      if (key in store.value) {\n        store.value = { ...store.value }\n        delete store.value[key]\n        store.notify(key)\n      }\n    } else if (store.value[key] !== newValue) {\n      store.value = {\n        ...store.value,\n        [key]: newValue\n      }\n      store.notify(key)\n    }\n  }\n\n  return store\n}\n"],
  "mappings": "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",
  "names": []
}
