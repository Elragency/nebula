{
  "version": 3,
  "sources": ["../../throttles/dist/index.mjs", "../../@astrojs/prefetch/dist/requestIdleCallback.js", "../../@astrojs/prefetch/dist/client.js"],
  "sourcesContent": ["export default function (limit) {\n\tlimit = limit || 1;\n\tvar queue=[], wip=0;\n\n\tfunction toAdd(fn) {\n\t\tqueue.push(fn) > 1 || run(); // initializes if 1st\n\t}\n\n\tfunction isDone() {\n\t\twip--; // make room for next\n\t\trun();\n\t}\n\n\tfunction run() {\n\t\tif (wip < limit && queue.length > 0) {\n\t\t\tqueue.shift()(); wip++; // is now WIP\n\t\t}\n\t}\n\n\treturn [toAdd, isDone];\n}\n", "function shim(callback, options) {\n  const timeout = options?.timeout ?? 50;\n  const start = Date.now();\n  return setTimeout(function() {\n    callback({\n      didTimeout: false,\n      timeRemaining: function() {\n        return Math.max(0, timeout - (Date.now() - start));\n      }\n    });\n  }, 1);\n}\nconst requestIdleCallback = window.requestIdleCallback || shim;\nvar requestIdleCallback_default = requestIdleCallback;\nexport {\n  requestIdleCallback_default as default\n};\n", "import throttles from \"throttles\";\nimport requestIdleCallback from \"./requestIdleCallback.js\";\nconst events = [\"mouseenter\", \"touchstart\", \"focus\"];\nconst preloaded = /* @__PURE__ */ new Set();\nconst loadedStyles = /* @__PURE__ */ new Set();\nfunction shouldPreload({ href }) {\n  try {\n    const url = new URL(href);\n    return window.location.origin === url.origin && window.location.pathname !== url.pathname && !preloaded.has(href);\n  } catch {\n  }\n  return false;\n}\nlet parser;\nlet observer;\nfunction observe(link) {\n  preloaded.add(link.href);\n  observer.observe(link);\n  events.map((event) => link.addEventListener(event, onLinkEvent, { passive: true, once: true }));\n}\nfunction unobserve(link) {\n  observer.unobserve(link);\n  events.map((event) => link.removeEventListener(event, onLinkEvent));\n}\nfunction onLinkEvent({ target }) {\n  if (!(target instanceof HTMLAnchorElement)) {\n    return;\n  }\n  preloadHref(target);\n}\nasync function preloadHref(link) {\n  unobserve(link);\n  const { href } = link;\n  try {\n    const contents = await fetch(href).then((res) => res.text());\n    parser ||= new DOMParser();\n    const html = parser.parseFromString(contents, \"text/html\");\n    const styles = Array.from(html.querySelectorAll('link[rel=\"stylesheet\"]'));\n    await Promise.all(\n      styles.filter((el) => !loadedStyles.has(el.href)).map((el) => {\n        loadedStyles.add(el.href);\n        return fetch(el.href);\n      })\n    );\n  } catch {\n  }\n}\nfunction prefetch({\n  selector = 'a[href][rel~=\"prefetch\"]',\n  throttle = 1,\n  intentSelector = 'a[href][rel~=\"prefetch-intent\"]'\n}) {\n  if (!navigator.onLine) {\n    return Promise.reject(new Error(\"Cannot prefetch, no network connection\"));\n  }\n  if (\"connection\" in navigator) {\n    const connection = navigator.connection;\n    if (connection.saveData) {\n      return Promise.reject(new Error(\"Cannot prefetch, Save-Data is enabled\"));\n    }\n    if (/(2|3)g/.test(connection.effectiveType)) {\n      return Promise.reject(new Error(\"Cannot prefetch, network conditions are poor\"));\n    }\n  }\n  const [toAdd, isDone] = throttles(throttle);\n  observer = observer || new IntersectionObserver((entries) => {\n    entries.forEach((entry) => {\n      if (entry.isIntersecting && entry.target instanceof HTMLAnchorElement) {\n        const relAttributeValue = entry.target.getAttribute(\"rel\") || \"\";\n        let matchesIntentSelector = false;\n        if (Array.isArray(intentSelector)) {\n          matchesIntentSelector = intentSelector.some(\n            (intent) => relAttributeValue.includes(intent)\n          );\n        } else {\n          matchesIntentSelector = relAttributeValue.includes(intentSelector);\n        }\n        if (!matchesIntentSelector) {\n          toAdd(() => preloadHref(entry.target).finally(isDone));\n        }\n      }\n    });\n  });\n  requestIdleCallback(() => {\n    const links = [...document.querySelectorAll(selector)].filter(shouldPreload);\n    links.forEach(observe);\n    const intentSelectorFinal = Array.isArray(intentSelector) ? intentSelector.join(\",\") : intentSelector;\n    const intentLinks = [\n      ...document.querySelectorAll(intentSelectorFinal)\n    ].filter(shouldPreload);\n    intentLinks.forEach((link) => {\n      events.map(\n        (event) => link.addEventListener(event, onLinkEvent, { passive: true, once: true })\n      );\n    });\n  });\n}\nexport {\n  prefetch as default\n};\n"],
  "mappings": ";AAAe,SAAR,aAAkB,OAAO;AAC/B,UAAQ,SAAS;AACjB,MAAI,QAAM,CAAC,GAAG,MAAI;AAElB,WAAS,MAAM,IAAI;AAClB,UAAM,KAAK,EAAE,IAAI,KAAK,IAAI;AAAA,EAC3B;AAEA,WAAS,SAAS;AACjB;AACA,QAAI;AAAA,EACL;AAEA,WAAS,MAAM;AACd,QAAI,MAAM,SAAS,MAAM,SAAS,GAAG;AACpC,YAAM,MAAM,EAAE;AAAG;AAAA,IAClB;AAAA,EACD;AAEA,SAAO,CAAC,OAAO,MAAM;AACtB;;;ACpBA,SAAS,KAAK,UAAU,SAAS;AAC/B,QAAM,WAAU,mCAAS,YAAW;AACpC,QAAM,QAAQ,KAAK,IAAI;AACvB,SAAO,WAAW,WAAW;AAC3B,aAAS;AAAA,MACP,YAAY;AAAA,MACZ,eAAe,WAAW;AACxB,eAAO,KAAK,IAAI,GAAG,WAAW,KAAK,IAAI,IAAI,MAAM;AAAA,MACnD;AAAA,IACF,CAAC;AAAA,EACH,GAAG,CAAC;AACN;AACA,IAAM,sBAAsB,OAAO,uBAAuB;AAC1D,IAAI,8BAA8B;;;ACXlC,IAAM,SAAS,CAAC,cAAc,cAAc,OAAO;AACnD,IAAM,YAA4B,oBAAI,IAAI;AAC1C,IAAM,eAA+B,oBAAI,IAAI;AAC7C,SAAS,cAAc,EAAE,KAAK,GAAG;AAC/B,MAAI;AACF,UAAM,MAAM,IAAI,IAAI,IAAI;AACxB,WAAO,OAAO,SAAS,WAAW,IAAI,UAAU,OAAO,SAAS,aAAa,IAAI,YAAY,CAAC,UAAU,IAAI,IAAI;AAAA,EAClH,QAAQ;AAAA,EACR;AACA,SAAO;AACT;AACA,IAAI;AACJ,IAAI;AACJ,SAAS,QAAQ,MAAM;AACrB,YAAU,IAAI,KAAK,IAAI;AACvB,WAAS,QAAQ,IAAI;AACrB,SAAO,IAAI,CAAC,UAAU,KAAK,iBAAiB,OAAO,aAAa,EAAE,SAAS,MAAM,MAAM,KAAK,CAAC,CAAC;AAChG;AACA,SAAS,UAAU,MAAM;AACvB,WAAS,UAAU,IAAI;AACvB,SAAO,IAAI,CAAC,UAAU,KAAK,oBAAoB,OAAO,WAAW,CAAC;AACpE;AACA,SAAS,YAAY,EAAE,OAAO,GAAG;AAC/B,MAAI,EAAE,kBAAkB,oBAAoB;AAC1C;AAAA,EACF;AACA,cAAY,MAAM;AACpB;AACA,eAAe,YAAY,MAAM;AAC/B,YAAU,IAAI;AACd,QAAM,EAAE,KAAK,IAAI;AACjB,MAAI;AACF,UAAM,WAAW,MAAM,MAAM,IAAI,EAAE,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC;AAC3D,wBAAW,IAAI,UAAU;AACzB,UAAM,OAAO,OAAO,gBAAgB,UAAU,WAAW;AACzD,UAAM,SAAS,MAAM,KAAK,KAAK,iBAAiB,wBAAwB,CAAC;AACzE,UAAM,QAAQ;AAAA,MACZ,OAAO,OAAO,CAAC,OAAO,CAAC,aAAa,IAAI,GAAG,IAAI,CAAC,EAAE,IAAI,CAAC,OAAO;AAC5D,qBAAa,IAAI,GAAG,IAAI;AACxB,eAAO,MAAM,GAAG,IAAI;AAAA,MACtB,CAAC;AAAA,IACH;AAAA,EACF,QAAQ;AAAA,EACR;AACF;AACA,SAAS,SAAS;AAAA,EAChB,WAAW;AAAA,EACX,WAAW;AAAA,EACX,iBAAiB;AACnB,GAAG;AACD,MAAI,CAAC,UAAU,QAAQ;AACrB,WAAO,QAAQ,OAAO,IAAI,MAAM,wCAAwC,CAAC;AAAA,EAC3E;AACA,MAAI,gBAAgB,WAAW;AAC7B,UAAM,aAAa,UAAU;AAC7B,QAAI,WAAW,UAAU;AACvB,aAAO,QAAQ,OAAO,IAAI,MAAM,uCAAuC,CAAC;AAAA,IAC1E;AACA,QAAI,SAAS,KAAK,WAAW,aAAa,GAAG;AAC3C,aAAO,QAAQ,OAAO,IAAI,MAAM,8CAA8C,CAAC;AAAA,IACjF;AAAA,EACF;AACA,QAAM,CAAC,OAAO,MAAM,IAAI,aAAU,QAAQ;AAC1C,aAAW,YAAY,IAAI,qBAAqB,CAAC,YAAY;AAC3D,YAAQ,QAAQ,CAAC,UAAU;AACzB,UAAI,MAAM,kBAAkB,MAAM,kBAAkB,mBAAmB;AACrE,cAAM,oBAAoB,MAAM,OAAO,aAAa,KAAK,KAAK;AAC9D,YAAI,wBAAwB;AAC5B,YAAI,MAAM,QAAQ,cAAc,GAAG;AACjC,kCAAwB,eAAe;AAAA,YACrC,CAAC,WAAW,kBAAkB,SAAS,MAAM;AAAA,UAC/C;AAAA,QACF,OAAO;AACL,kCAAwB,kBAAkB,SAAS,cAAc;AAAA,QACnE;AACA,YAAI,CAAC,uBAAuB;AAC1B,gBAAM,MAAM,YAAY,MAAM,MAAM,EAAE,QAAQ,MAAM,CAAC;AAAA,QACvD;AAAA,MACF;AAAA,IACF,CAAC;AAAA,EACH,CAAC;AACD,8BAAoB,MAAM;AACxB,UAAM,QAAQ,CAAC,GAAG,SAAS,iBAAiB,QAAQ,CAAC,EAAE,OAAO,aAAa;AAC3E,UAAM,QAAQ,OAAO;AACrB,UAAM,sBAAsB,MAAM,QAAQ,cAAc,IAAI,eAAe,KAAK,GAAG,IAAI;AACvF,UAAM,cAAc;AAAA,MAClB,GAAG,SAAS,iBAAiB,mBAAmB;AAAA,IAClD,EAAE,OAAO,aAAa;AACtB,gBAAY,QAAQ,CAAC,SAAS;AAC5B,aAAO;AAAA,QACL,CAAC,UAAU,KAAK,iBAAiB,OAAO,aAAa,EAAE,SAAS,MAAM,MAAM,KAAK,CAAC;AAAA,MACpF;AAAA,IACF,CAAC;AAAA,EACH,CAAC;AACH;",
  "names": []
}
